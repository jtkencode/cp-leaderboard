#!/usr/bin/env python
# pylint: disable=invalid-name

"""This script scrapes Polban Atcoder leaderboard and outputs a JSON array
containing the parsed data."""

import json
from re import findall
import requests
from bs4 import BeautifulSoup


URL = "https://atcoder.jp/ranking/all?f.Affiliation=Bandung+State+Polytechnic"

def get_username(cell):
    """get_username takes a BeautifulSoup object containing a <td> cell from
    Atcoder leaderboard and outputs the parsed username from the <a> tag."""
    raw = cell.find("a", {"class": "username"}).get("href").strip()
    assert raw[:7] == "/users/"

    return raw[7:]

def get_polban_rank(cell):
    """get_polban_rank takes a BeautifulSoup object containing a <td> cell from
    Atcoder leaderboard and returns the user's rank across Polban users."""
    res =  findall(r'\d+', cell.get_text().strip())
    assert len(res) >= 1

    return int(res[0])

result = []

headers = {
    "User-Agent": "cp-leaderboard (https://github.com/jtkencode/cp-leaderboard)"
}

req = requests.get(URL, headers, timeout=10)

soup = BeautifulSoup(req.content, "html.parser")
leaderboard_rows = soup.select(".table-responsive tbody tr")
assert len(leaderboard_rows) > 0

for row in leaderboard_rows:
    columns = row.find_all("td")
    assert len(columns) == 7

    entry = {
        "polban_rank": get_polban_rank(columns[0]),
        "username": get_username(columns[1]),
        "birth": int(columns[2].get_text().strip()),
        "rating": int(columns[3].get_text().strip()),
        "highest": int(columns[4].get_text().strip()),
        "match": int(columns[5].get_text().strip()),
        "win": int(columns[6].get_text().strip())
    }

    result.append(entry)

result = sorted(result, key=lambda item: item["username"])

print(json.dumps(result, indent=4, sort_keys=True))
